const { cmd } = require("../lib/command");
const yts = require("yt-search");
const axios = require("axios");
const config = require("../settings");

cmd(
  {
    pattern: "sahas",
    desc: "Stylish MP3 sender to configured JID",
    category: "download",
    react: "üéß",
    filename: __filename,
  },
  async (robin, mek, m, { q, reply }) => {
    try {
      if (!q) return reply("*‡∂î‡∂∫‡∑è‡∂Ω‡∑è ‡∂ú‡∑ì‡∂≠ ‡∂±‡∂∏‡∂ö‡∑ä ‡∑Ñ‡∑ù YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±...!*");

      const search = await yts(q);
      if (!search.videos.length) return reply("*‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è... ‚ùå*");

      const data = search.videos[0];
      const ytUrl = data.url;

      const api = `https://yt-five-tau.vercel.app/download?q=${ytUrl}&format=mp3`;
      const { data: apiRes } = await axios.get(api);

      if (!apiRes?.status || !apiRes.result?.download) {
        return reply("‚ùå ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");
      }

      const result = apiRes.result;
      
      const desc = `\`‚òòÔ∏è ·¥õ…™·¥õ ü·¥á\` : ${result.title}
    
‚ùí ‚è±Ô∏èùòã·¥ú Ä·¥Ä·¥õ…™·¥è…¥ : ${data.timestamp}   
‚ùí üé≠ ·¥†…™·¥á·¥°Íú± : ${data.views}

üéß Use headphones for best experience

\`‡∂¥‡∑è‡∂ß ‡∂¥‡∑è‡∂ß Heart üíöü©∑üß° React ‡∑Ä‡∑ê‡∑É‡∑ä‡∑É‡∂ö‡∑ä ‡∂î‡∂±‡∑ö ‡∂Ω‡∂∏‡∂∫‡∑ù... üíîü•∫\`

> *ü´üüé∂‡∂∏‡∂±‡∑ú‡∑ä‡∂¥‡∑è‡∂ª | Music ·•´·≠°|üá±üá∞*`;

      // Send thumbnail with caption
      await robin.sendMessage(
        config.SAHAS,
        {
          image: { url: result.thumbnail },
          caption: caption,
        },
        { quoted: mek }
      );

      // Send PTT Audio
      await robin.sendMessage(
        config.SAHAS,
        {
          audio: { url: result.download },
          mimetype: "audio/mpeg",
          ptt: true,
        },
        { quoted: mek }
      );

      // Send Confirmation
      await robin.sendMessage(
        mek.key.remoteJid,
        {
          text: `‚úÖ *"${result.title}"* This Song || *${config.THARUSHA}* Sendedüòíüëà`,
        },
        { quoted: mek }
      );

    } catch (e) {
      console.error(e);
      reply("*‡∂á‡∂≠‡∑ê‡∂∏‡∑ä ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑í! ‡∂¥‡∑É‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.*");
    }
  }
);


/*
cmd(
  {
    pattern: "csong",
    desc: "Stylish MP3 sender to configured JID",
    category: "download",
    react: "üéß",
    filename: __filename,
  },
  async (robin, mek, m, { q, reply }) => {
    try {
      if (!q) return reply("*‡∂î‡∂∫‡∑è‡∂Ω‡∑è ‡∂ú‡∑ì‡∂≠ ‡∂±‡∂∏‡∂ö‡∑ä ‡∑Ñ‡∑ù YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±...!*");

      const search = await yts(q);
      if (!search.videos.length) return reply("*‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è... ‚ùå*");

      const data = search.videos[0];
      const ytUrl = data.url;

      const api = `https://yt-five-tau.vercel.app/download?q=${ytUrl}&format=mp3`;
      const { data: apiRes } = await axios.get(api);

      if (!apiRes?.status || !apiRes.result?.download) {
        return reply("‚ùå ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");
      }

      const result = apiRes.result;

      const caption = `‚ï≠‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚óé

*‚óàüé∂  ùóß ùô∏ùöÉùôªùô¥ : ‚ñ∫*  *${result.title}*
*‚óàüçí  ùóó ùöÑùöÅùô∞ùöÉùô∏ùôæùôΩ : ‚ñ∫* *${data.timestamp}*
*‚óà üçá ùó¶ ùô∏ùöâùô¥ : ‚ñ∫*  2.00 MB
*‚óàüåπ ùó° ùöÑùôºùô±ùô¥ùöÅ : ‚ñ∫* 001

> üéº ·¥úÍú±·¥á  ú·¥á·¥Ä·¥Ö·¥© ú·¥è…¥·¥áÍú± Íú∞·¥è Ä  ô·¥áÍú±·¥õ ·¥áx·¥©·¥á Ä…™·¥á…¥·¥Ñ·¥á üò´ü•∫üéß

‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ ‚óé`;

      // Send thumbnail with caption
      await robin.sendMessage(
        config.Gmsara, // Make sure this is defined in settings
        {
          image: { url: result.thumbnail },
          caption: caption,
        },
        { quoted: mek }
      );

      // Send PTT Audio
      await robin.sendMessage(
        config.Gmsara, // Fixed: both same ID
        {
          audio: { url: result.download },
          mimetype: "audio/mpeg",
          ptt: true,
        },
        { quoted: mek }
      );

      // Send Confirmation
      await robin.sendMessage(
        mek.key.remoteJid,
        {
          text: `‚úÖ *"${result.title}"* This Song || *${config.THARUSHA}* Sendedüòíüëà`,
        },
        { quoted: mek }
      );

    } catch (e) {
      console.error(e);
      reply("*‡∂á‡∂≠‡∑ê‡∂∏‡∑ä ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑í! ‡∂¥‡∑É‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.*");
    }
  }
);
*/

//===========

/*
cmd(
  {
    pattern: "gsong",
    alias: "gimsaras",
    desc: "Stylish MP3 sender to configured JID",
    category: "download",
    react: "üéß",
    filename: __filename,
  },
  async (robin, mek, m, { q, reply }) => {
    try {
      if (!q) return reply("*‡∂î‡∂∫‡∑è‡∂Ω‡∑è ‡∂ú‡∑ì‡∂≠ ‡∂±‡∂∏‡∂ö‡∑ä ‡∑Ñ‡∑ù YouTube ‡∂Ω‡∑í‡∂±‡∑ä‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±...!*");

      const search = await yts(q);
      if (!search.videos.length) return reply("*‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ñ‡∂∏‡∑î‡∂±‡∑ú‡∑Ä‡∑î‡∂´‡∑è... ‚ùå*");

      const data = search.videos[0];
      const ytUrl = data.url;

      const api = `https://yt-five-tau.vercel.app/download?q=${ytUrl}&format=mp3`;
      const { data: apiRes } = await axios.get(api);

      if (!apiRes?.status || !apiRes.result?.download) {
        return reply("‚ùå ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑Ö ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö. ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±!");
      }

      const result = apiRes.result;

      
      // Send thumbnail with caption
      await robin.sendMessage(
        config.Gimsara,
        {
          image: { url: result.thumbnail },
          caption: caption,
        },
        { quoted: mek }
      );

      // Send PTT Audio
      await robin.sendMessage(
        config.Gimsara,
        {
          audio: { url: result.download },
          mimetype: "audio/mpeg",
          ptt: true,
        },
        { quoted: mek }
      );

      // Send Confirmation
      await robin.sendMessage(
        mek.key.remoteJid,
        {
          text: `‚úÖ *"${result.title}"* This Song || *${config.Gimsara}* Sendedüòíüëà`,
        },
        { quoted: mek }
      );

    } catch (e) {
      console.error(e);
      reply("*‡∂á‡∂≠‡∑ê‡∂∏‡∑ä ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑í! ‡∂¥‡∑É‡∑î‡∑Ä ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.*");
    }
  }
);
*/

